// ﻿﻿Copyright (c) Code Impressions, LLC. All Rights Reserved.
//  
//  Licensed under the Apache License, Version 2.0 (the "License")
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//  
//      http://www.apache.org/licenses/LICENSE-2.0
//  
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

using System;
using Transmitly.ChannelProvider.TwilioClient.Voice;
using Transmitly.Delivery;

namespace Transmitly
{
	/// <summary>
	/// Collection of Twilio specific voice delivery report properties.
	/// </summary>
	public sealed class ExtendedVoiceDeliveryReportProperties
	{
		private readonly IExtendedProperties _extendedProperties;
		private const string ProviderKey = Constant.VoicePropertiesKey;
		internal ExtendedVoiceDeliveryReportProperties(DeliveryReport deliveryReport)
		{
			_extendedProperties = Guard.AgainstNull(deliveryReport).ExtendedProperties;
		}

		internal ExtendedVoiceDeliveryReportProperties(IExtendedProperties properties)
		{
			_extendedProperties = Guard.AgainstNull(properties);
		}

		internal void Apply(VoiceStatusReport report)
		{
			To = report.To;
			From = report.From;
			CallSid = report.CallSid;
			Timestamp = report.Timestamp;
			ApiVersion = report.ApiVersion;
			CallToken = report.CallToken;
			AccountSid = report.AccountSid;
			Duration = report.Duration;
		}

		/// <summary>
		/// The phone number or client identifier of the party that initiated the call. 
		/// Phone numbers are formatted with a '+' and country code, e.g., +16175551212 (<a href="https://www.twilio.com/docs/glossary/what-e164">E.164</a> format). 
		/// Client identifiers begin with the client: URI scheme; for example, on a call from a client named 'charlie', 
		/// the From parameter will be client:charlie. 
		/// If a caller ID is withheld or otherwise unavailable, 
		/// you may receive a string that contains anonymous, unknown, or other descriptions.
		/// </summary>
		public string? From
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(From));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(From), value);
		}

		/// <summary>
		/// The phone number or client identifier of the called party. Phone numbers are formatted with a '+' 
		/// and country code, e.g., +16175551212(<a href="https://www.twilio.com/docs/glossary/what-e164">E.164</a> format). 
		/// Client identifiers begin with the client: URI scheme; 
		/// for example, for a call to a client named 'joey', the To parameter will be client:joey.
		/// </summary>
		public string? To
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(To));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(To), value);
		}

		/// <summary>
		/// A unique identifier for this call, generated by Twilio.
		/// </summary>
		public string? CallSid
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(CallSid));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(CallSid), value);
		}

		/// <summary>
		/// A descriptive status for the call. The value is one of the following: queued, ringing, in-progress, completed, 
		/// busy, failed or no-answer. 
		/// See the <a href="https://www.twilio.com/docs/voice/twiml#callstatus-values">CallStatus section</a> for more details.
		/// </summary>
		public TimeSpan? Duration
		{
			get => _extendedProperties.GetValue<TimeSpan?>(ProviderKey, nameof(Duration));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(Duration), value);
		}

		public DateTimeOffset? Timestamp
		{
			get => _extendedProperties.GetValue<DateTimeOffset?>(ProviderKey, nameof(Timestamp));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(Timestamp), value);
		}

		/// <summary>
		/// The version of the Twilio API used to handle this call. For incoming calls, 
		/// this is determined by the API version set on the called number. 
		/// For outgoing calls, this is the version used by the REST API request from the outgoing call.
		/// </summary>
		public string? ApiVersion
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(ApiVersion));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(ApiVersion), value);
		}

		/// <summary>
		/// A token string needed to invoke a forwarded call.
		/// </summary>
		public string? CallToken
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(CallToken));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(CallToken), value);
		}

		/// <summary>
		/// Your Twilio account ID. It is 34 characters long, and always starts with the letters AC.
		/// </summary>
		public string? AccountSid
		{
			get => _extendedProperties.GetValue<string?>(ProviderKey, nameof(AccountSid));
			set => _extendedProperties.AddOrUpdate(ProviderKey, nameof(AccountSid), value);
		}
	}
}